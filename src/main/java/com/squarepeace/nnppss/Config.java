/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.squarepeace.nnppss;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Properties;

import javax.swing.BorderFactory;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author allysson
 */
public class Config extends javax.swing.JFrame {

    Utilities utilities = new Utilities();
    /**
     * Creates new form Config
     */
    public Config() {
        initComponents();
        utilities.setFrameIcon(this, "/n.png");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfUrlPsvita = new javax.swing.JTextField();
        jtfUrlPsp = new javax.swing.JTextField();
        jbSave = new javax.swing.JButton();
        jbClear = new javax.swing.JButton();
        jbClose = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jtfUrlPsx = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jSpinner_simultaneous_downloads = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jtfDownloadPath = new javax.swing.JTextField();
        jbSelectDownloadPath = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jtfPkgDecToolPath = new javax.swing.JTextField();
        jbSelectPkgDecToolPath = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jcbDeletePkgFile = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Configuration");
        setUndecorated(true);

        jLabel1.setText("PSVITA URL:");

        jLabel2.setText("PSP URL:");

        jbSave.setText("Save");
        jbSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSaveActionPerformed(evt);
            }
        });

        jbClear.setText("Clear All");
        jbClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbClearActionPerformed(evt);
            }
        });

        jbClose.setText("Close");
        jbClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCloseActionPerformed(evt);
            }
        });

        jLabel3.setText("PSX URL:");

        jLabel4.setText("simultaneous downloads:");

        jLabel5.setText("Download Path:");

        jbSelectDownloadPath.setText("Select Path");
        jbSelectDownloadPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSelectDownloadPathActionPerformed(evt);
            }
        });

        jLabel6.setText("Pkg_dec tool:");

        jbSelectPkgDecToolPath.setText("Select Path");
        jbSelectPkgDecToolPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSelectPkgDecToolPathActionPerformed(evt);
            }
        });

        jLabel7.setText("Delete Pkg Files after successful unpack:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbClear)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel2))
                                    .addComponent(jLabel1))
                                .addComponent(jLabel5)))
                        .addGap(27, 27, 27)))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jbClose)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbSave)
                        .addGap(20, 20, 20))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jtfUrlPsvita, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                                .addComponent(jtfUrlPsx)
                                .addComponent(jtfUrlPsp)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jtfDownloadPath, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jbSelectDownloadPath)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jtfPkgDecToolPath, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jbSelectPkgDecToolPath)))
                        .addContainerGap(19, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcbDeletePkgFile))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinner_simultaneous_downloads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfUrlPsvita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfUrlPsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfUrlPsx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfDownloadPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jbSelectDownloadPath))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtfPkgDecToolPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSelectPkgDecToolPath))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jSpinner_simultaneous_downloads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jcbDeletePkgFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSave)
                    .addComponent(jbClear)
                    .addComponent(jbClose))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbClearActionPerformed
        //limpia los campos de texto
        jtfUrlPsvita.setText("");
        jtfUrlPsp.setText("");
        jtfUrlPsx.setText("");
        jtfDownloadPath.setText("");
        jtfPkgDecToolPath.setText("");
        jSpinner_simultaneous_downloads.setValue(1);
        jcbDeletePkgFile.setSelected(false);
    }//GEN-LAST:event_jbClearActionPerformed

    private void jbSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSaveActionPerformed
        //metodo que utiliza la clase properties para guardar las url en el archivo config.properties
        Properties prop = new Properties();
        OutputStream output = null; 
        try {
            output = new FileOutputStream("config.properties");
            prop.setProperty("psvita.url", jtfUrlPsvita.getText());
            prop.setProperty("psp.url", jtfUrlPsp.getText());
            prop.setProperty("psx.url", jtfUrlPsx.getText());
            prop.setProperty("simultaneousDownloads", jSpinner_simultaneous_downloads.getValue().toString());
            prop.setProperty("downloadPath", jtfDownloadPath.getText());
            prop.setProperty("pkgDecToolPath", jtfPkgDecToolPath.getText());
            prop.setProperty("deletePkgFile", String.valueOf(jcbDeletePkgFile.isSelected()));
            prop.store(output, null);
            JOptionPane.showMessageDialog(null, "Configuration saved successfully");
            
        } catch (IOException io) {
            io.printStackTrace();      
        } finally {
            if (output != null) {
                try {
                    output.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }   
        
    }//GEN-LAST:event_jbSaveActionPerformed

    private void jbCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCloseActionPerformed
        //cierra la ventana        
        this.dispose();
    }//GEN-LAST:event_jbCloseActionPerformed

    private void jbSelectDownloadPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSelectDownloadPathActionPerformed
       //metodo que abre un JFileChooser para seleccionar la carpeta de descarga
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.showOpenDialog(null);
        jtfDownloadPath.setText(chooser.getSelectedFile().getAbsolutePath());
    }//GEN-LAST:event_jbSelectDownloadPathActionPerformed

    private void jbSelectPkgDecToolPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSelectPkgDecToolPathActionPerformed
       //metodo que abre un JFileChooser para seleccionar la carpeta donde se encuentra pkg_dec
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.showOpenDialog(null);
        jtfPkgDecToolPath.setText(chooser.getSelectedFile().getAbsolutePath());
    }//GEN-LAST:event_jbSelectPkgDecToolPathActionPerformed

    public void loadValues() {
        //metodo que carga las url guardadas en el archivo config.properties
        FileReader reader;
        try {
            reader = new FileReader("config.properties");
            Properties p=new Properties();  
            p.load(reader);  
            String psvitaUrl = p.getProperty("psvita.url");
            String pspUrl = p.getProperty("psp.url");
            String psxUrl = p.getProperty("psx.url");
            String simultaneousDownloads = p.getProperty("simultaneousDownloads");
            jSpinner_simultaneous_downloads.setValue(Integer.valueOf(simultaneousDownloads));
            String downloadPath = p.getProperty("downloadPath");
            String pkgDecToolPath = p.getProperty("pkgDecToolPath");
            String deletePkgFile = p.getProperty("deletePkgFile");
            jcbDeletePkgFile.setSelected(Boolean.parseBoolean(deletePkgFile));

            if (psvitaUrl != null && !psvitaUrl.isEmpty()) {
                jtfUrlPsvita.setText(psvitaUrl);
            }

            if (pspUrl != null && !pspUrl.isEmpty()) {
                jtfUrlPsp.setText(pspUrl);
            }

            if (psxUrl != null && !psxUrl.isEmpty()) {
                jtfUrlPsx.setText(psxUrl);
            }
            if (simultaneousDownloads != null && !simultaneousDownloads.isEmpty()) {
                if (simultaneousDownloads.matches("[0-9]+") && Integer.parseInt(simultaneousDownloads) > 0) {
                    jSpinner_simultaneous_downloads.setValue(Integer.valueOf(simultaneousDownloads));
                } else {
                    jSpinner_simultaneous_downloads.setValue(1);
                }
            } else {
                jSpinner_simultaneous_downloads.setValue(1);
            }
            if (downloadPath != null && !downloadPath.isEmpty()) {
                jtfDownloadPath.setText(downloadPath);
            }
            if (pkgDecToolPath != null && !pkgDecToolPath.isEmpty()) {
                jtfPkgDecToolPath.setText(pkgDecToolPath);
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }  
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Config.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Config.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Config.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Config.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Config().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jSpinner_simultaneous_downloads;
    private javax.swing.JButton jbClear;
    private javax.swing.JButton jbClose;
    private javax.swing.JButton jbSave;
    private javax.swing.JButton jbSelectDownloadPath;
    private javax.swing.JButton jbSelectPkgDecToolPath;
    private javax.swing.JCheckBox jcbDeletePkgFile;
    private javax.swing.JTextField jtfDownloadPath;
    private javax.swing.JTextField jtfPkgDecToolPath;
    private javax.swing.JTextField jtfUrlPsp;
    private javax.swing.JTextField jtfUrlPsvita;
    private javax.swing.JTextField jtfUrlPsx;
    // End of variables declaration//GEN-END:variables
    
}
